//Xingeng Wang, xiw031, 11144515
//Yuchen Lin  , yul761, 11138672

Part C design document:
  
    Use struct to create a NODE type variable, which contain one void pointer for data,
 one NODE pointer point to the previous one and obe for the next one.
 
    Use struct to create a LIST type variable, which contain three NODE pointer for head,
 tail and current item.  store another integer for number of NODE in list.
 
    Create every routine's function heading and just implement the correct return type.  
 Leave comment for further implement.  
 
    For further implementation, since the requirement include that 'no dynamic memory allocation on a per-list or 
 per-node basis', time complexity for every operation should be O(1). Therefore, it would
 be a greate idea to use two array to monitor the NODE and LIST.  The array for NODE store
 the NODE that is not in the list and each element also store a pointer that point to the 
 array of LIST.  Starting from the first one, always point to the first empty space of LIST 
 array. That way, it is easier to reach the head, tail and count the number of elements in
 the LIST.  
 